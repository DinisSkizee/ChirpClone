import { type NextPage } from "next";
import Head from "next/head";

import {
  UserButton,
  useUser,
  SignInButton,
  SignedIn,
  SignedOut,
} from "@clerk/nextjs";
import { RouterOutputs, api } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";

dayjs.extend(relativeTime);
// const CreatePostWizard = () => {
//   const { user } = useUser();

//   if (!user) return null;
//   return (
//     <div>
//       <img
//         src={user.profileImageUrl}
//         alt="img"
//         className="h-48 w-48 rounded-full"
//       />
//     </div>
//   );
// };

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div
      key={post.id}
      className="flex items-center gap-3 border-b border-slate-400 p-4"
    >
      <Image
        src={author.profileImageUrl}
        alt="pic"
        className="rounded-full"
        height={56}
        width={56}
      />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-200">
          <span className="font-bold">{`@${author?.username}`}</span>
          <span>{`Â·  ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        {post.content}
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;
  if (!data) return <div>Something went wrong</div>;
  console.log(user);
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex border-b border-slate-400  p-4">
            {/* <CreatePostWizard /> */}
            <SignedIn>
              <div className="flex w-[100%] gap-3">
                <UserButton />
                <input
                  placeholder="Type some emojis"
                  className="grow bg-transparent"
                />
              </div>
            </SignedIn>
            <SignedOut>
              {/* Signed out users get sign in button */}
              <SignInButton />
            </SignedOut>
          </div>
          <div>
            {data?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

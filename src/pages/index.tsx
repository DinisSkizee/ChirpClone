import { type NextPage } from "next";
import Head from "next/head";

import {
  UserButton,
  useUser,
  SignInButton,
  SignedIn,
  SignedOut,
} from "@clerk/nextjs";
import { RouterOutputs, api } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { LoadingPage } from "~/components/LoadingSpinner";
import { useState } from "react";

dayjs.extend(relativeTime);

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div
      key={post.id}
      className="flex items-center gap-3 border-b border-slate-400 p-4"
    >
      <Image
        src={author.profileImageUrl}
        alt="pic"
        className="rounded-full"
        height={56}
        width={56}
      />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-200">
          <span className="font-bold">{`@${author?.username}`}</span>
          <span>{`Â·  ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        {post.content}
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading) return <LoadingPage />;

  if (!data) return <div>Something went wrong</div>;

  return (
    <div>
      {data?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const { user } = useUser();

  const [input, setInput] = useState("");

  const { mutate } = api.posts.create.useMutation();

  api.posts.getAll.useQuery();

  if (!user) return null;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.5/flowbite.min.css"
          rel="stylesheet"
        />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex border-b border-slate-400  p-4">
            <SignedIn>
              <div className="flex w-[100%] gap-3">
                <UserButton />
                <input
                  placeholder="Type some emojis"
                  className="grow bg-transparent"
                  type="text"
                  value={input}
                  onChange={(e) => setInput(e.target.value)}
                />
              </div>
            </SignedIn>
            <SignedOut>
              <SignInButton />
            </SignedOut>
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
